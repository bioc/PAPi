\name{PAPi-package}
\alias{PAPi-package}
\alias{PAPi}
\docType{package}
\title{
Pathway Activity Profiling
}
\description{
PAPi is an R package that implements the PAPi algorithm published in Aggio et al. 2010. It relates metabolite abundances to metabolic pathway activity. For this, PAPi uses a typical metabolomics data set and the KEGG (Kyoto Encyclopedia of Genes and Genomes) database (http://www.genome.jp/kegg/). 
}
\details{
\tabular{ll}{
Package: \tab PAPi\cr
Type: \tab Package\cr
Version: \tab 0.99.3\cr
Date: \tab 2013-03-27\cr
License: \tab GPL(>= 2)\cr
}
PAPi has five functions: \code{\link{buildDatabase}}, \code{\link{addKeggCodes}}, \code{\link{papi}}, \code{\link{papiHtest}} and \code{\link{papiLine}}. The main function of PAPi is papi, which uses a metabolomics data set for predicting the activity of metabolic pathways. For this, papi requires the name of each compound to be substituted by its respective KEGG code. KEGG code is a unique compound identifier in KEGG database. The function addKeggCodes then automatically substitutes compounds names by their respective KEGG codes while papi generates a list of metabolic pathways with their predicted metabolic activity. papiHtest performs ANOVA or t-test on results generated by papi. Finally, papiLine generates a line graph of results produced by papi or papiHtest.    
}
\author{
Raphael Aggio
Maintainer: Raphael Aggio (raphael.aggio@gmail.com)
}
\references{
Aggio, R.B.M; Ruggiero, K. and Villas-Boas, S.G. (2010) - Pathway Activity Profiling (PAPi): from metabolite profile to metabolic pathway activity. Bioinformatics.
}

\keyword{ package }

\examples{
### Building input data ####
Names <- c("Replicates", "C00197", "C05345", "C00031", "C00118", "C00111")
Sample1 <- c("cond1", 0.2, 0.3, 0.8, 1.1, 1.2)
Sample2 <- c("cond1", 0.3, 0.2, 0.6, 1.5, 1.5)
Sample3 <- c("cond1", 0.5, 0.4, 0.7, 1.2, 1.3)
Sample4 <- c("cond2", 1.1, 0.6, 1.2, NA, 0.2)
Sample5 <- c("cond2", 1.0, 0.7, 1.1, NA, 0.3)
Sample6 <- c("cond2", 0.9, 0.7, 1.5, NA, 0.2) 

papiData <- data.frame(cbind(Names, Sample1, Sample2, Sample3, Sample4, Sample5,
Sample6), stringsAsFactors = FALSE)

### Applying papi ####
#papiResults <- papi(papiData, save = FALSE)
}
